Index: app/src/main/java/com/cookandroid/registeration/CourseListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.registeration;\r\n\r\nimport android.content.Context;\r\nimport android.os.AsyncTask;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.toolbox.Volley;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.net.URLEncoder;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class CourseListAdapter extends BaseAdapter {\r\n\r\n    private Context context;\r\n    private List<Course> courseList;\r\n    private Fragment parent;\r\n    private String userID = MainActivity.userID;\r\n    private Schedule schedule = new Schedule();\r\n    private List<Integer> courseIDList;\r\n    public static int totalCredit = 0;\r\n\r\n    int priority;\r\n\r\n    public CourseListAdapter(Context context, List<Course> courseList, Fragment parent) {\r\n        this.context = context;\r\n        this.courseList = courseList;\r\n        this.parent = parent;\r\n        schedule = new Schedule();\r\n        courseIDList = new ArrayList<Integer>();\r\n        new BackgroundTask().execute();\r\n        totalCredit = 0;\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        return courseList.size();\r\n    }\r\n\r\n    @Override\r\n    public Object getItem(int i) {\r\n        return courseList.get(i);\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int i) {\r\n        return i;\r\n    }\r\n\r\n    @Override\r\n    public View getView(final int i, View view, ViewGroup viewGroup) {\r\n        View v = View.inflate(context, R.layout.course, null);\r\n        TextView courseGrade = (TextView)v.findViewById(R.id.courseGrade);\r\n        TextView courseTitle = (TextView)v.findViewById(R.id.courseTitle);\r\n        TextView courseCredit = (TextView)v.findViewById(R.id.courseCredit);\r\n        TextView courseDivide = (TextView)v.findViewById(R.id.courseDivide);\r\n        TextView coursePersonnel = (TextView)v.findViewById(R.id.coursePersonnel);\r\n        TextView courseProfessor = (TextView)v.findViewById(R.id.courseProfessor);\r\n        TextView courseTime = (TextView)v.findViewById(R.id.courseTime);\r\n\r\n        if(courseList.get(i).getCourseGrade().equals(\"제한 없음\") || courseList.get(i).getCourseGrade().equals(\"\"))\r\n        {\r\n            courseGrade.setText(\"모든 학년\");\r\n        }\r\n        else{\r\n            courseGrade.setText(courseList.get(i).getCourseGrade() + \"학년\");\r\n        }\r\n        courseTitle.setText(courseList.get(i).getCourseTitle());\r\n        courseCredit.setText(courseList.get(i).getCourseCredit() + \"학점\");\r\n        courseDivide.setText(courseList.get(i).getCourseDivide() + \"분반\");\r\n        if(courseList.get(i).getCoursePersonnel() == 0)\r\n        {\r\n            coursePersonnel.setText(\"인원 제한 없음\");\r\n        }\r\n        else{\r\n            coursePersonnel.setText(\"제한 인원: \" + courseList.get(i).getCoursePersonnel() + \"명\");\r\n        }\r\n        if(courseList.get(i).getCourseProfessor().equals(\"\"))\r\n        {\r\n            courseProfessor.setText(\"개인 연구\");\r\n        }\r\n        else\r\n        {\r\n            courseProfessor.setText(courseList.get(i).getCourseProfessor() +\"교수님\");\r\n        }\r\n        courseTime.setText(courseList.get(i).getCourseTime() + \"\");\r\n\r\n        v.setTag(courseList.get(i).getCourseID());\r\n\r\n        Button addButton = (Button) v.findViewById(R.id.addButton);\r\n        addButton.setOnClickListener(new View.OnClickListener() {\r\n\r\n            //수정 후\r\n            @Override\r\n            public void onClick(View view) {\r\n                boolean validate = false;\r\n                validate = schedule.validate(courseList.get(i).getCourseTime());\r\n\r\n                if (!alreadyIn(courseIDList, courseList.get(i).getCourseID())) {\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());\r\n                    AlertDialog dialog = builder.setMessage(\"이미 추가한 강의입니다.\")\r\n                            .setPositiveButton(\"다시 시도\", null)\r\n                            .create();\r\n                    dialog.show();\r\n                } else if (totalCredit + courseList.get(i).getCourseCredit() > 24) {\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());\r\n                    AlertDialog dialog = builder.setMessage(\"24학점을 추가할 수 없습니다.\")\r\n                            .setPositiveButton(\"다시 시도\", null)\r\n                            .create();\r\n                    dialog.show();\r\n                }\r\n\r\n\r\n                else if (validate == false) {\r\n                    Response.Listener<String> responseListener = new Response.Listener<String>() {\r\n\r\n                        @Override\r\n                        public void onResponse(String response) {\r\n                            try {\r\n                                JSONObject jsonResponse = new JSONObject(response);\r\n                                boolean success = jsonResponse.getBoolean(\"success\");\r\n                                if (success){\r\n                                    AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());\r\n                                    AlertDialog dialog = builder.setMessage(\"시간표가 중복됩니다.\")\r\n                                            .setPositiveButton(\"다시 시도\", null)\r\n                                            .create();\r\n                                    dialog.show();\r\n                                }\r\n                                else{\r\n                                    AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());\r\n                                    AlertDialog dialog = builder.setMessage(\"강의 추가에 실패하였습니다.\")\r\n                                            .setNegativeButton(\"확인\",null).create();\r\n                                    dialog.show();\r\n                                }\r\n                            }\r\n                            catch (Exception e){\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    };\r\n                    //우선순위를 불러와서 거기서 +1해야함\r\n                    //priority = courseList.get(i).getPriority() +1;\r\n                    priority += 1;\r\n                    AddRequest addRequest = new AddRequest(userID, courseList.get(i).getCourseID() + \"\", priority + \"\", responseListener);\r\n                    RequestQueue queue = Volley.newRequestQueue(parent.getActivity());\r\n                    queue.add(addRequest);\r\n                }\r\n\r\n\r\n                else {\r\n                    Response.Listener<String> responseListener = new Response.Listener<String>() {\r\n\r\n                        @Override\r\n                        public void onResponse(String response) {\r\n                            try {\r\n                                JSONObject jsonResponse = new JSONObject(response);\r\n                                boolean success = jsonResponse.getBoolean(\"success\");\r\n                                if (success){\r\n                                    AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());\r\n                                    AlertDialog dialog = builder.setMessage(\"강의가 추가되었습니다.\")\r\n                                            .setPositiveButton(\"확인\",null).create();\r\n                                    dialog.show();\r\n                                    courseIDList.add(courseList.get(i).getCourseID());\r\n                                    schedule.addSchedule(courseList.get(i).getCourseTime());\r\n                                    totalCredit += courseList.get(i).getCourseCredit();\r\n                                }\r\n                                else{\r\n                                    AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());\r\n                                    AlertDialog dialog = builder.setMessage(\"강의 추가에 실패하였습니다.\")\r\n                                            .setNegativeButton(\"확인\",null).create();\r\n                                    dialog.show();\r\n                                }\r\n                            }\r\n                            catch (Exception e){\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    AddRequest addRequest = new AddRequest(userID, courseList.get(i).getCourseID() + \"\", 0 + \"\",  responseListener);\r\n                    RequestQueue queue = Volley.newRequestQueue(parent.getActivity());\r\n                    queue.add(addRequest);\r\n                }\r\n            }\r\n        });\r\n\r\n        return v;\r\n    }\r\n\r\n    //수정 중\r\n    class BackgroundTask extends AsyncTask<Void, Void, String>\r\n    {\r\n        String target;\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            try\r\n            {\r\n                target = \"https://duwjd20602.cafe24.com/ScheduleList.php?userID=\" + URLEncoder.encode(userID, \"UTF-8\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        protected String doInBackground(Void... voids) {\r\n            try{\r\n                URL url = new URL(target);\r\n                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\r\n                InputStream inputStream = httpURLConnection.getInputStream();\r\n                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\r\n                String temp;\r\n                StringBuilder stringBuilder = new StringBuilder();\r\n                while((temp = bufferedReader.readLine()) != null)\r\n                {\r\n                    stringBuilder.append(temp + \"\\n\");\r\n                }\r\n                bufferedReader.close();\r\n                inputStream.close();\r\n                httpURLConnection.disconnect();\r\n                return stringBuilder.toString().trim();\r\n            }  catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n            return null;\r\n        }\r\n\r\n\r\n\r\n        @Override\r\n        public void onProgressUpdate(Void... values){\r\n            super.onProgressUpdate();\r\n        }\r\n\r\n        @Override\r\n        public void onPostExecute(String result) {\r\n            try{\r\n                JSONObject jsonObject = new JSONObject(result);\r\n                JSONArray jsonArray = jsonObject.getJSONArray(\"response\");\r\n                int count = 0;\r\n                String courseProfessor;\r\n                String courseTime;\r\n                int courseID;\r\n                totalCredit = 0;\r\n                while (count < jsonArray.length())\r\n                {\r\n                    JSONObject object = jsonArray.getJSONObject(count);\r\n                    courseID = object.getInt(\"courseID\");\r\n                    courseProfessor = object.getString(\"courseProfessor\");\r\n                    courseTime = object.getString(\"courseTime\");\r\n                    totalCredit += object.getInt(\"courseCredit\");\r\n                    courseIDList.add(courseID);\r\n                    schedule.addSchedule(courseTime);\r\n                    count++;\r\n                }\r\n            }  catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public boolean alreadyIn(List<Integer> courseIDList, int item)\r\n    {\r\n        for(int i = 0; i < courseIDList.size(); i++)\r\n        {\r\n            if(courseIDList.get(i) == item)\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/registeration/CourseListAdapter.java	(revision 1b923ff7e8352e4b07d4e4c13b9edff4858f67d0)
+++ app/src/main/java/com/cookandroid/registeration/CourseListAdapter.java	(date 1613469734406)
@@ -137,11 +137,16 @@
                                 JSONObject jsonResponse = new JSONObject(response);
                                 boolean success = jsonResponse.getBoolean("success");
                                 if (success){
-                                    AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());
-                                    AlertDialog dialog = builder.setMessage("시간표가 중복됩니다.")
-                                            .setPositiveButton("다시 시도", null)
-                                            .create();
-                                    dialog.show();
+                                    //DB에 없을 경우에만 추가!
+                                        AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());
+                                        AlertDialog dialog = builder.setMessage("시간표가 중복됩니다.")
+                                                .setPositiveButton("다시 시도", null)
+                                                .create();
+                                        dialog.show();
+
+                                        courseIDList.add(courseList.get(i).getCourseID());
+                                         System.out.println("courseIDList" + courseIDList);
+                                        //schedule.addSchedule(courseList.get(i).getCourseTime());
                                 }
                                 else{
                                     AlertDialog.Builder builder = new AlertDialog.Builder(parent.getActivity());
